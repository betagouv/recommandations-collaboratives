# encoding: utf-8

"""
Settings for development

author  : raphael.marvie@beta.gouv.fr,guillaume.libersat@beta.gouv.fr
created : 2021-05-31 11:54:53 CEST
"""

import os

from dotenv import load_dotenv

from .common import *

load_dotenv()

for k, v in {
    "PROCONNECT_SERVER_URL": "https://app-sandbox.moncomptepro.beta.gouv.fr/.well-known/openid-configuration"
}.items():
    os.environ.setdefault(k, v)



# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "localhost",
    "example.localhost",
    "bacasable.localhost",
    "urbanvitaliz.localhost",
    "ecoquartiers.localhost",
    "sosponts.localhost",
    "sos-mobilites-hdf.localhost",
    "monespacecollectivite.localhost",
    "accompagnement.encommuns.localhost",
    "depannemarenov.localhost",
]

INSTALLED_APPS += [
    "debug_toolbar",
    "drf_spectacular",
    "drf_spectacular_sidecar",
    "django_extensions",
]

MIDDLEWARE += ("debug_toolbar.middleware.DebugToolbarMiddleware",)

# Necessary for debug_toolbar to work
INTERNAL_IPS = [
  "127.0.0.1",
]

DEBUG_TOOLBAR_CONFIG = {
    "SHOW_TOOLBAR_CALLBACK": lambda r: r.environ.get("SERVER_NAME", None)
    != "testserver"
    and (r.META.get("REMOTE_ADDR", None) in INTERNAL_IPS)
}

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("DJANGO_DB_NAME", "recoco"),
        "USER": os.getenv("DJANGO_DB_USER", "recoco"),
        "PASSWORD": os.getenv("DJANGO_DB_PASSWORD"),
        "HOST": os.getenv("DJANGO_DB_HOST", "localhost"),
        "PORT": os.getenv("DJANGO_DB_PORT", 5432),
        "TEST": {"NAME": os.getenv("DJANGO_DB_TEST_NAME", "test_recoco")},
    }
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "rich.logging.RichHandler",
            "rich_tracebacks": True,
            "show_time": False,
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "INFO",
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": os.getenv("DJANGO_LOG_LEVEL", "INFO"),
            "propagate": False,
        },
    },
}

# EMAIL
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

SECRET_KEY = os.getenv("SECRET_KEY", "secret")

BREVO_API_KEY = os.environ.get("BREVO_API_KEY")
BREVO_FORCE_DEBUG = True

# Recaptcha
RECAPTCHA_REQUIRED_SCORE = 0

# Vite
DJANGO_VITE_ASSETS_PATH = BASE_DIR / "frontend" / "dist"
DJANGO_VITE = {"default": {"dev_mode": DEBUG, "dev_server_port": 3000}}
DJANGO_VITE_DEV_MODE = DEBUG

# Add this if you want multisite support (make sure youclone the repository in
# the same dir under the name "mulisites")
MULTISITE_REPO_DIR = BASE_DIR / ".." / "multisites"
TEMPLATES[0]["DIRS"] += [MULTISITE_REPO_DIR / "templates"]
STATICFILES_DIRS += [MULTISITE_REPO_DIR / "static"]
STATICFILES_DIRS += [BASE_DIR / "static"]
STATICFILES_DIRS += [DJANGO_VITE_ASSETS_PATH]



# Uncomment Gdal and Geos libraries paths on MacOS or Windows
# GDAL_LIBRARY_PATH = os.getenv("GDAL_LIBRARY_PATH")
# GEOS_LIBRARY_PATH = os.getenv("GEOS_LIBRARY_PATH")

SILENCED_SYSTEM_CHECKS += ["captcha.recaptcha_test_key_error"]

# Materialized views
# MATERIALIZED_VIEWS_SPEC = [
#     {
#         "name": "your_view_name",
#         "indexes": ["field 1"],
#         "unique_indexes": ["field 2"],
#     }
# ]

# Celery
CELERY_TASK_ALWAYS_EAGER = True

# Démarches simplifiées
DS_AUTOLOAD_SCHEMA = False
DS_AUTOCREATE_FOLDER = False

# eof
