[tool.djlint]
# ignore = "W013"
extension = "html"
indent = 4
exclude = ".venv,venv,.eggs" # override the default set of excluded paths

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "recoco.settings.testing"
addopts = [
    "-p no:warnings",
    "--reuse-db",
    "--tb=short",
    "--numprocesses=auto",
    "--maxprocesses=4",
    "--cov=recoco",
    "--cov-report=xml",
]
testpaths = ["recoco"]
python_files = "tests.py test_*.py *_test.py *_tests.py"

[tool.pylint.main]
jobs = 2
load-plugins = "pylint_django"
good-names-rgxs = "^[_a-z][_a-z0-9]?$"
ignore = ["settings", "static", "templates", ".venv", "tests", "migrations"]
disable = [
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-module-docstring",
    "use-list-literal",
    "use-dict-literal",
    "duplicate-code",
    "possibly-unused-variable",   # django views w/ locals()
    "consider-using-f-string",
    "fixme",
]

[tool.pylint.design]
min-public-methods = 1

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "B",  # flake8-bugbear
    "F",  # Pyflakes
    "I",  # isort
    "S",  # flake8-bandit
]
unfixable = ["ALL"]
fixable = ["I"]
exclude = [
    "docs/*",
    "frontend_tests/*",
    "node_modules/*",
    "notebooks/*",
    "sql/*",
]
ignore = ["S101", "S110", "S112"]

[tool.ruff.lint.isort]
case-sensitive = true
known-third-party = [
    "crispy_forms",
    "django",
    "dotenv",
    "fabric",
    "factory",
    "guardian",
    "IPython",
    "ipywidgets",
    "model_bakery",
    "requests",
    "rest_framework",
]
split-on-trailing-comma = true
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.extend-per-file-ignores]
"**/migrations/*.py" = ["I"]
"**/test_*.py" = ["S105"]
"recoco/settings/*.py" = ["F403", "F405", "E402"]
"recoco/apps/metrics/**/*.py" = ["S608"]

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true
