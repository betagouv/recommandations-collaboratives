name: Django Tests CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: uv_ci
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Configure
        run: |
          cp urbanvitaliz/settings/development.py.example urbanvitaliz/settings/development.py

      - name: Run Tests
        env:
          SECRET_KEY: "this-is-not-a-secret-key"
          SENDINBLUE_API_KEY: "this-is-a-fake-api-key"
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
        run: |
          pytest
