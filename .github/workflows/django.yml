name: Django Tests CI

on:
  push:
    branches: ['main', 'develop', 'release/*', 'feature/*']
  pull_request:
    branches: ['main', 'develop', 'release/*']

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: ci_db_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    strategy:
      matrix:
        python-version: ['3.11']

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.1.5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: borales/actions-yarn@v3.0.0

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install python3-gdal

      - name: Compile DSRC_UI
        working-directory: ./recoco/frontend/modules/dsrc_ui
        run: |
          yarn install
          yarn build

      - name: Compile JS
        working-directory: ./recoco/frontend
        run: |
          yarn install
          yarn build

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Configure
        run: |
          cp recoco/settings/development.py.example recoco/settings/development.py

      - name: TEMP check DB
        env:
          PGPASSWORD: postgres
        run: |
          sudo apt-get install --yes --no-install-recommends postgresql-client
          psql -h localhost -U postgres --no-password -c "\dt;" ci_db_test

      - name: Run Tests
        env:
          SECRET_KEY: 'this-is-not-a-secret-key'
          SENDINBLUE_API_KEY: 'this-is-a-fake-api-key'
          DB_HOST: localhost
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: ci_db_test
          DB_PORT: 5432
          DB_ENGINE: django.db.backends.postgresql
        run: |
          python manage.py migrate django_webhook
          python manage.py migrate
          pytest --create-db
